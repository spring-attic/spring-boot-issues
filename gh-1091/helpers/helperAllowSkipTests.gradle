def calcSkipTests() {
	
    Boolean result = false; // default value
    // prop skip.tests can be set in gradle.properties
    // command line props/sysprops have highest precedence
	// gradle.properties prop can be overridden from command line with -Pskip.tests=someValue 
	// skipTests feature can also be set by command line e.g. -Dskip.tests=true|false
    
    //  https://www.gradle.org/docs/current/userguide/gradle_command_line.html 
    // command-line options and system properties take precedence over environment variables.
    
    String skipTestsKey = 'skip.tests';
        
    // ### 1 cmd line precedence -- test task on cmd line
    if ( 'test' in gradle.startParameter.taskNames ) {
        result = false; // do the tests (not skipping)
    } else {
		// ### prop
        def skipTestsEqTrue  = project.properties[ skipTestsKey ] in ['true']; // implicit false if value not true
        // ### sysProp - only consider if exists on command line - means we are ignoring _JAVA_OPTIONS etc
        String sCmdLine = "${ System.properties.'sun.java.command' }"; // note there is no sun.java.command property on OS X 32 bit Java 6
        if ( sCmdLine.contains("-D${skipTestsKey}") ) {
             skipTestsEqTrue = System.getProperty(skipTestsKey,"false").equals('true'); // null defaults to false
        }
        result = skipTestsEqTrue;
    }
    return result;
}

// def gi = groovy.inspect.swingui.ObjectBrowser.&inspect;
// gi project;

Boolean hasTestTask =  project.tasks.findAll { (it.name == 'test') }.size() > 0;

if ( hasTestTask  ) {
	test.onlyIf { !calcSkipTests() }
}
